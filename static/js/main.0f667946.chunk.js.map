{"version":3,"sources":["mazosEnemigos.js","statsEnemigos.js","juego.js","carta.js","githubforkme.js","tablero.js","App.js","serviceWorker.js","index.js"],"names":["Bruto","Portero","Chicanero","Lancero","Escurridizo","Orco","hpBase","defensaBase","estilo","mazos","MazosEnemigos","Goblin","MazoHeroeBasico","robarCarta","G","ctx","jug","players","accionesTomadas","includes","mazo","length","robarXCartas","push","events","endPhase","esquivar","carta","mano","filter","e","atacar","cartas","objetivo","enemigos","danoRecibido","clase","every","concat","buscarReparo","peligro","random","Shuffle","descansar","golpes","enemigosPreparan","i","cartaPorJugarVisible","mazoPorJugar","mazoJugado","cartaPorJugar","shift","enemigoAtaca","enemigoReset","cantCartas","unshift","pop","genPlayers","numPlayers","id","vida","dano","dataCartas","Array","fill","map","el","index","name","moves","setup","setupData","Enemigos","enemigoStats","subclase","Die","nombre","Object","keys","find","busca","enemigo","primerRonda","turn","order","TurnOrder","RESET","endIf","vidasJugadores","reduce","total","enemigosVivos","phases","robar","onBegin","forEach","elem","moverCartas","robarCartasInicial","Math","max","min","next","start","enemigoPrepara","primerAccion","ataqueEnemigo","segundaAccion","sumario","esquiva","console","log","defensaObjetivo","valorAtaque","resolverAcciones","Carta","className","this","props","children","React","Component","href","aria-label","width","height","viewBox","aria-hidden","d","CartaEnemigo","contenido","defensa","ataque","stats","Enemigo","vidas","key","cartasPorJugar","cartaActual","defensaActual","cartasJugadas","derrotado","classBoton","onClick","indexAtacado","uiAtaque","enem","Accion","usable","accion","inactivo","stringAccion","VidaJugador","jugador","robar3","Jugador","state","cartasElegidas","maxCartasElegibles","minCartasElegidas","ultimaFase","fase","setState","cambiarMensaje","cambiarUIAtaque","slice","indexCarta","splice","findIndex","cant","cantEnMano","ataqueActivo","volteada","peligroActivo","golpeActivo","pos","indexOf","elegida","elegible","style","elegirCarta","peligroActual","accionesBasicasInactivas","esquivaOculto","iniciarEsquivar","iniciarAtaque","Mensaje","classOculto","Tablero","mensaje","contMensaje","currentPlayer","gameover","phase","peligroTotal","evitado","defEnemigo","ataqueJugador","final","GitHubFork","arg","atacarEnemigo","atacado","cambiarAtaque","App","Client","game","Juego","board","debug","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f667946.chunk.js","sourcesContent":["export default {\r\n    Bruto : [\r\n        [+2,-2],\r\n        [+1,-1],\r\n        [+1,-1],\r\n        [.0,.0],\r\n        [.0,-1],\r\n    ],\r\n    Portero : [\r\n        [+2,-2],\r\n        [+1,-1],\r\n        [.0,.0],\r\n        [.0,.0],\r\n        [-1,.0],\r\n    ],\r\n    Chicanero : [\r\n        [+1,-1],\r\n        [.0,.0],\r\n        [.0,.0],\r\n        [.0,-1],\r\n    ],\r\n    Lancero : [\r\n        [+1,.0],\r\n        [+1,.0],\r\n        [.0,.0],\r\n        [-1,+1],\r\n    ],\r\n    Escurridizo: [\r\n        [+1,.0],\r\n        [.0,+1],\r\n        [.0,.0],\r\n        [-1,.0],\r\n    ]\r\n};","import MazosEnemigos from './mazosEnemigos';\r\n\r\nexport default {\r\n    Orco:{ hpBase: 3, defensaBase: 5, estilo:\"orco\", mazos: [MazosEnemigos.Bruto, MazosEnemigos.Portero] },\r\n    Goblin:{ hpBase: 2, defensaBase: 4, estilo:\"goblin\", mazos: [MazosEnemigos.Chicanero, MazosEnemigos.Lancero, MazosEnemigos.Escurridizo] },\r\n};","import { TurnOrder } from 'boardgame.io/core';\r\nimport Enemigos from './statsEnemigos';\r\nimport MazosEnemigos from './mazosEnemigos';\r\nimport { PluginPlayer } from 'boardgame.io/plugins';\r\n\r\nconst MazoHeroeBasico = [\r\n    1,\r\n    2, 2,\r\n    3, 3, 3, 3, 3,\r\n    4, 4, 4, 4,\r\n    5, 5,\r\n    6,\r\n];\r\n\r\nconst enemigo = (ctx, clase, subclase = -1) => {\r\n    if (subclase === -1) {\r\n        subclase = ctx.random.Die(clase.mazos.length) - 1;\r\n    }\r\n    const mazo = clase.mazos[subclase];\r\n\r\n    const nombre = Object.keys(Enemigos).find(busca => Enemigos[busca] === clase)\r\n        + \" \" + Object.keys(MazosEnemigos).find(busca => MazosEnemigos[busca] === mazo);\r\n\r\n    return {\r\n        nombre: nombre,\r\n\r\n        danoRecibido: 0,\r\n        cartaPorJugarVisible: false,\r\n        mazoPorJugar: ctx.random.Shuffle(mazo),\r\n        cartaPorJugar: null,\r\n        mazoJugado: [],\r\n\r\n        clase: clase,\r\n    }\r\n}\r\n\r\nconst robarCartasInicial = (G, ctx, jug) => {\r\n    const cantCartas = Math.max(0, Math.min(G.players[jug].vida - G.players[jug].dano, G.players[jug].mazo.length));\r\n    robarXCartas(G, ctx, cantCartas, jug);\r\n    ctx.events.endPhase();\r\n}\r\nconst robarCarta = (G, ctx, jug) => {\r\n    if (G.players[jug].accionesTomadas.includes(\"robarCarta\")) return;\r\n    if (G.players[jug].mazo.length === 0) return;\r\n\r\n    robarXCartas(G, ctx, 1, jug);\r\n\r\n    G.players[jug].accionesTomadas.push(\"robarCarta\");\r\n    ctx.events.endPhase();\r\n}\r\nconst esquivar = (G, ctx, carta, jug) => {\r\n    if (G.players[jug].accionesTomadas.includes(\"esquivar\")) return;\r\n    if (!G.players[jug].mano.includes(carta)) return;\r\n\r\n    G.players[jug].mano = G.players[jug].mano.filter(e => e !== carta);\r\n    G.players[jug].esquivar.push(carta);\r\n\r\n    G.players[jug].accionesTomadas.push(\"esquivar\");\r\n    ctx.events.endPhase();\r\n}\r\nconst atacar = (G, ctx, cartas, objetivo, jug) => {\r\n    if (G.players[jug].accionesTomadas.includes(\"atacar\")) return;\r\n    if (cartas.length < 2) return;\r\n    if(!G.enemigos[objetivo]) return;\r\n    if(G.enemigos[objetivo].danoRecibido >= G.enemigos[objetivo].clase.hpBase) return;\r\n    if (!cartas.every(e => G.players[jug].mano.includes(e))) return;\r\n\r\n    G.players[jug].mano = G.players[jug].mano.filter(e => !cartas.includes(e));\r\n    G.players[jug].atacar = cartas.concat(G.players[jug].atacar);\r\n    if (G.enemigos[objetivo]) G.players[jug].objetivo = objetivo;\r\n\r\n    G.players[jug].accionesTomadas.push(\"atacar\");\r\n    ctx.events.endPhase();\r\n}\r\nconst buscarReparo = (G, ctx, jug) => {\r\n    if (G.players[jug].accionesTomadas.includes(\"buscarReparo\")) return;\r\n    if (G.players[jug].peligro.length === 0) return;\r\n\r\n    G.players[jug].mazo = ctx.random.Shuffle(G.players[jug].mazo.concat(G.players[jug].peligro));\r\n    G.players[jug].peligro = [];\r\n\r\n    G.players[jug].accionesTomadas.push(\"buscarReparo\");\r\n    ctx.events.endPhase();\r\n}\r\nconst descansar = (G, ctx, jug) => {\r\n    if (G.players[jug].accionesTomadas.includes(\"descansar\")) return;\r\n    if (G.players[jug].golpes.length === 0) return;\r\n\r\n    G.players[jug].mazo = ctx.random.Shuffle(G.players[jug].mazo.concat(G.players[jug].golpes));\r\n    G.players[jug].golpes = [];\r\n\r\n    G.players[jug].accionesTomadas.push(\"descansar\");\r\n    ctx.events.endPhase();\r\n}\r\nconst enemigosPreparan = (G, ctx) => {\r\n    for (let i = 0; i < G.enemigos.length; i++) {\r\n        if (G.enemigos[i].danoRecibido >= G.enemigos[i].clase.hpBase) continue;\r\n        G.enemigos[i].cartaPorJugarVisible = false;\r\n        if (G.enemigos[i].mazoPorJugar.length === 0) {\r\n            G.enemigos[i].mazoPorJugar = ctx.random.Shuffle(G.enemigos[i].mazoJugado);\r\n            G.enemigos[i].mazoJugado = [];\r\n        }\r\n        if (G.enemigos[i].cartaPorJugar != null) G.enemigos[i].mazoJugado.push(G.enemigos[i].cartaPorJugar);\r\n        G.enemigos[i].cartaPorJugar = G.enemigos[i].mazoPorJugar.shift();\r\n    }\r\n}\r\nconst enemigoAtaca = (G, ctx) => {\r\n    for (let i = 0; i < G.enemigos.length; i++) {\r\n        G.enemigos[i].cartaPorJugarVisible = true;\r\n    }\r\n}\r\nconst enemigoReset = (G, ctx) => {\r\n    for (let i = 0; i < G.enemigos.length; i++) {\r\n        G.enemigos[i].cartaPorJugarVisible = false;\r\n        if (G.enemigos[i].cartaPorJugar != null) {\r\n            G.enemigos[i].mazoJugado.push(G.enemigos[i].cartaPorJugar);\r\n            G.enemigos[i].cartaPorJugar = null;\r\n        }\r\n    }\r\n}\r\nconst moverCartas = (G, ctx) => {\r\n    Object.keys(G.players).forEach((jug) => {\r\n        G.players[jug].accionesTomadas = [];\r\n        G.players[jug].peligro = G.players[jug].esquivar.concat(G.players[jug].peligro);\r\n        G.players[jug].golpes = G.players[jug].atacar.concat(G.players[jug].golpes);\r\n        G.players[jug].esquivar = [];\r\n        G.players[jug].atacar = [];\r\n    });\r\n    enemigoReset(G, ctx);\r\n}\r\nconst resolverAcciones = (G, ctx) => {\r\n    Object.keys(G.players).forEach((jug) => {\r\n        const esquiva = G.players[jug].esquivar.length === 0 ? -99 : G.players[jug].dataCartas[G.players[jug].esquivar[0]];\r\n        let ataqueEnemigo = 0;\r\n        G.enemigos.forEach(e => {\r\n            if (e.danoRecibido < e.clase.hpBase && e.cartaPorJugar) ataqueEnemigo += e.cartaPorJugar[0];\r\n        });\r\n        const peligro = (G.players[jug].dataCartas[G.players[jug].peligro[0]] || 0) + ataqueEnemigo;\r\n        console.log(`esquiva ${esquiva} >= peligro ${peligro}`);\r\n        if (peligro > esquiva) {\r\n            G.players[jug].dano++;\r\n        }\r\n\r\n        if (G.players[jug].atacar.length > 0) {\r\n            G.players[jug].atacar = ctx.random.Shuffle(G.players[jug].atacar);\r\n            const objetivo = G.players[jug].objetivo;\r\n            const defensaObjetivo = G.enemigos[objetivo].clase.defensaBase + G.enemigos[objetivo].cartaPorJugar[1];\r\n            const valorAtaque = G.players[jug].dataCartas[G.players[jug].atacar[0]];\r\n            console.log(`ataque ${valorAtaque} >= def ${defensaObjetivo}`);\r\n            if (valorAtaque >= defensaObjetivo) {\r\n                G.enemigos[objetivo].danoRecibido += (G.players[jug].atacar.length - 1);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nconst robarXCartas = (G, ctx, cantCartas, jug) => {\r\n    for (let i = 0; i < cantCartas; i++) {\r\n        if (G.players[jug].mazo.length > 0)\r\n            G.players[jug].mano.unshift(G.players[jug].mazo.pop());\r\n    }\r\n}\r\nconst genPlayers = (ctx) => {\r\n    let players = {};\r\n    for (let i = 0; i < ctx.numPlayers; i++) {\r\n        players[i + ''] = {\r\n            id: i + '',\r\n            vida: 3,\r\n            dano: 0,\r\n            dataCartas: MazoHeroeBasico,\r\n            mazo: ctx.random.Shuffle((new Array(MazoHeroeBasico.length)).fill(1).map((el, index) => index)),\r\n            objetivo: 0,\r\n            mano: [],\r\n            esquivar: [],\r\n            atacar: [],\r\n            peligro: [],\r\n            golpes: [],\r\n            accionesTomadas: [],\r\n        };\r\n    }\r\n    return players;\r\n}\r\n\r\n//Juego\r\nexport default {\r\n    name: 'vigilantes-de-belona',\r\n\r\n    moves: {},\r\n\r\n    setup: (ctx, setupData) => ({\r\n        enemigos: [Enemigos.Goblin, Enemigos.Goblin, Enemigos.Orco].map(enemigoStats => enemigo(ctx, enemigoStats)),\r\n        players: genPlayers(ctx),\r\n        primerRonda: true,\r\n    }),\r\n\r\n\r\n    // playerSetup: (playerID) => {\r\n    //     const a = {\r\n    //         nombre: playerID,\r\n    //         vida: 3,\r\n    //         mazo: MazoHeroeBasico.slice(),\r\n    //         mano: [],\r\n    //         esquivar: [],\r\n    //         atacar: [],\r\n    //         peligro: [],\r\n    //         golpe: [],\r\n    //         accionesTomadas: [],\r\n    //     };\r\n    //     console.log(a); return a;},\r\n    // plugins: [PluginPlayer],\r\n\r\n    turn: { order: TurnOrder.RESET },\r\n\r\n    endIf: (G,ctx)=>{\r\n        const vidasJugadores = Object.keys(G.players).map(e=>G.players[e]).reduce((total,jug)=>total+jug.vida+1-jug.dano,0);\r\n        const enemigosVivos = G.enemigos.reduce((total,enemigo)=>total+(enemigo.danoRecibido<enemigo.clase.hpBase?1:0),0);\r\n        if(vidasJugadores<=0 || enemigosVivos===0) return {vidasJugadores:vidasJugadores,enemigosVivos:enemigosVivos};\r\n    },\r\n\r\n    phases: {\r\n        robar: {\r\n            onBegin: (G, ctx) => {\r\n                if (G.primerRonda) {\r\n                    Object.keys(G.players).forEach((elem) => robarXCartas(G, ctx, 3, elem));\r\n                    G.primerRonda = false;\r\n                }\r\n                moverCartas(G, ctx);\r\n            },\r\n            moves: { robarCartasInicial },\r\n            next: 'primerAccion',\r\n            start: true,\r\n        },\r\n        enemigoPrepara: {\r\n            onBegin: (G, ctx) => {\r\n                enemigosPreparan(G, ctx);\r\n                // ctx.events.endPhase();\r\n            },\r\n            // endIf:(G,ctx)=>true,\r\n            moves: {},\r\n            // next: 'primerAccion',\r\n            next: 'primerAccion',\r\n            // start: true,\r\n        },\r\n        primerAccion: {\r\n            onBegin: (G, ctx) => {\r\n                enemigoReset(G, ctx);\r\n                enemigosPreparan(G, ctx);\r\n            },\r\n            moves: { esquivar, atacar, buscarReparo, descansar, robarCarta },\r\n            next: 'segundaAccion'\r\n        },\r\n        ataqueEnemigo: {\r\n            onBegin: (G, ctx) => {\r\n                enemigoAtaca(G, ctx);\r\n                ctx.events.endPhase();\r\n            },\r\n            moves: {},\r\n            // next: 'segundaAccion',\r\n            next: 'enemigoPrepara',\r\n        },\r\n        segundaAccion: {\r\n            onBegin: (G, ctx) => {\r\n                enemigoAtaca(G, ctx);\r\n            },\r\n            moves: { esquivar, atacar, buscarReparo, descansar, robarCarta },\r\n            next: 'sumario',\r\n        },\r\n        sumario: {\r\n            onBegin: (G, ctx) => {\r\n                resolverAcciones(G, ctx);\r\n            },\r\n            moves: {},\r\n            next: 'robar',\r\n            // onEnd: (G, ctx) => {\r\n            //     moverCartas(G, ctx);\r\n            // },\r\n        }\r\n    }\r\n\r\n};","import React from 'react';\r\nimport './carta.css';\r\n\r\nexport default class Carta extends React.Component {\r\n    render(){\r\n        // const estilo = {\r\n        //     backgroundImage:`url(${this.props.fondo})`,\r\n        //     width:(this.props.width===undefined?'unset':this.props.width),\r\n        //     height:(this.props.height===undefined?'unset':this.props.height),\r\n        // };\r\n\r\n        return (\r\n            <div className={`carta ${this.props.className || ' '}`}>\r\n                <div className=\"carta-interna\">\r\n                    <div className=\"carta-cara carta-reverso\"></div>\r\n                    <div className=\"carta-cara\">{this.props.children}</div>                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './githubforkme.css';\r\n\r\nexport default\r\n(<a href=\"https://github.com/pacoelayudante/vigilantes-de-belona\" className=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"60\" height=\"60\"\r\n        viewBox=\"0 0 250 250\" aria-hidden=\"true\">\r\n        <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\r\n        <path\r\n            d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n            fill=\"currentColor\" className=\"octo-arm\"></path>\r\n        <path\r\n            d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\r\n            fill=\"currentColor\" className=\"octo-body\"></path>\r\n    </svg></a>)","import React from 'react';\r\nimport Carta from './carta';\r\nimport GitHubFork from './githubforkme';\r\n\r\nclass CartaEnemigo extends React.Component {\r\n    render() {\r\n        let contenido = (<div className=\"carta-enemigo\"><div>¿?</div></div>);\r\n        if (this.props.defensa || this.props.ataque || this.props.stats) {\r\n            const ataque = this.props.ataque || (this.props.stats && this.props.stats[0]);\r\n            const defensa = this.props.defensa || (this.props.stats && this.props.stats[1]);\r\n            contenido = (\r\n                <div className=\"carta-enemigo\">\r\n                    <div className=\"defensa\">{defensa}</div>\r\n                    <div className=\"ataque\">{ataque}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Carta className={this.props.className || ' '}>\r\n                {contenido}\r\n            </Carta>\r\n        );\r\n    }\r\n}\r\n\r\nclass Enemigo extends React.Component {\r\n    render() {\r\n        const vidas = new Array(this.props.enemigo.clase.hpBase).fill(0).map(\r\n            (elem, index) => <div key={index} className={index < this.props.enemigo.danoRecibido ? \"dano\" : \"sano\"}></div>\r\n        );\r\n        const cartasPorJugar = this.props.enemigo.mazoPorJugar.map(\r\n            (elem, index) => <CartaEnemigo key={index} className=\"por-jugar volteada\" />\r\n        );\r\n        let cartaActual = [];\r\n        let defensaActual = \"?\";\r\n        if (this.props.enemigo.cartaPorJugar) {\r\n            if (this.props.enemigo.cartaPorJugarVisible) {\r\n                cartaActual = [(<CartaEnemigo key={cartasPorJugar.length} stats={this.props.enemigo.cartaPorJugar} className=\"carta-actual\" />)];\r\n                defensaActual = this.props.enemigo.clase.defensaBase + this.props.enemigo.cartaPorJugar[1];\r\n            }\r\n            else {\r\n                cartaActual = [(<CartaEnemigo key={cartasPorJugar.length} className=\"carta-actual volteada\" />)];\r\n            }\r\n        }\r\n        const cartasJugadas = this.props.enemigo.mazoJugado.map(\r\n            (elem, index) => <CartaEnemigo key={this.props.enemigo.mazoJugado.length - 1 + cartasPorJugar.length - index + cartaActual.length} stats={elem} className=\"ya-jugada\" />\r\n        );\r\n        const derrotado = this.props.enemigo.danoRecibido >= this.props.enemigo.clase.hpBase ? \" derrotado\" : \"\";\r\n\r\n        return (\r\n            <div className={\"enemigo \" + this.props.enemigo.clase.estilo + derrotado}>\r\n                <div className=\"nombre\">{this.props.enemigo.nombre}</div>\r\n                <div className=\"defensa\">\r\n                    <div className=\"base\">{this.props.enemigo.clase.defensaBase}</div>\r\n                    <div className=\"actual\">{defensaActual}</div>\r\n                </div>\r\n                <div className=\"mazo\">{[...cartasJugadas, ...cartaActual, ...cartasPorJugar]}</div>\r\n                <div className=\"hp\">\r\n                    <div className={\"boton \" + this.props.classBoton} onClick={this.props.atacar}>(Atacar)</div>\r\n                    {vidas}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Enemigos extends React.Component {\r\n    classBoton(index) {\r\n        if (this.props.enemigos[index].danoRecibido >= this.props.enemigos[index].clase.hpBase) return \" oculto\";\r\n        if (this.props.indexAtacado && this.props.indexAtacado !== -1) return (this.props.indexAtacado === index ? \" usado\" : \" oculto\");\r\n        if (this.props.uiAtaque === null) return \" oculto\";\r\n        if (this.props.uiAtaque.length < 2) return \" inactivo\";\r\n        return \"\";\r\n    }\r\n\r\n    render() {\r\n        const enemigos = this.props.enemigos.map((enem, index) => <Enemigo key={index} enemigo={enem}\r\n            classBoton={this.classBoton(index)} atacar={() => this.props.atacar(index)} />)\r\n\r\n        return (\r\n            <div className=\"enemigos\">\r\n                {enemigos}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Accion extends React.Component {\r\n    render() {\r\n        if (this.props.usable) {\r\n            return (<div><div onClick={this.props.accion} className={\"boton \" + (this.props.inactivo ? \"inactivo\" : \"\")}>{this.props.stringAccion}</div>\r\n                {this.props.children}</div>);\r\n        }\r\n        else {\r\n            return (<div><div className={\"boton usado\"}>{this.props.stringAccion}</div>\r\n                {this.props.children}</div>);\r\n        }\r\n    }\r\n}\r\nclass VidaJugador extends React.Component {\r\n    render() {\r\n        const vidas = new Array(this.props.jugador.vida + 1).fill(1).map((elem, index) =>\r\n            <div key={index} className={\"vida \" + (index < this.props.jugador.dano ? \"dano\" : \"sano\")}></div>\r\n        );\r\n\r\n        return (<div>\r\n            <div onClick={() => this.props.robar3(this.props.jugador.id)} className={\"boton \" + (this.props.inactivo ? \"inactivo\" : \"\")}>\r\n                +{this.props.jugador.vida - this.props.jugador.dano} ROBAR</div>\r\n            <div className=\"jugador-vidas\">{vidas}</div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst accionEsquivar = \"esquivar\";\r\nconst accionAtacar = \"atacar\";\r\n\r\nclass Jugador extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cartasElegidas: [],\r\n            maxCartasElegibles: 0,\r\n            minCartasElegidas: 0,\r\n            accion: \"\",\r\n            ultimaFase: null,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.ultimaFase !== this.props.fase) {\r\n            this.setState({ ultimaFase: this.props.fase, cartasElegidas: [], maxCartasElegibles: 0, accion: \"\" });\r\n            this.props.cambiarMensaje(null);\r\n            this.props.cambiarUIAtaque(null);\r\n        }\r\n    }\r\n\r\n    iniciarEsquivar() {\r\n        this.props.cambiarMensaje(\r\n            <div>Elije una carta para asignar como valor de esquiva<br />\r\n                Para esquivar con exito el valor de la esquiva tiene que ser\r\n        igual o mayor que el valor del peligro mas el ataque de los enemigos</div>\r\n        );\r\n        this.setState({\r\n            maxCartasElegibles: 1, minCartasElegidas: 1, accion: accionEsquivar,\r\n            cartasElegidas: this.state.cartasElegidas.slice(0, 1)\r\n        });\r\n        this.props.cambiarUIAtaque(null);\r\n    }\r\n    iniciarAtaque() {\r\n        this.props.cambiarMensaje(\r\n            <div>Elije mas de una carta para preparar un ataque<br />\r\n                El daño del ataque es la cantidad de cartas elegidas menos una<br />\r\n                Una de esas cartas será elegida al azar para determinar si el ataque es exitoso<br />\r\n                Para que un ataque sea exitoso debe igualar o superar la defensa actual del enemigo atacado</div>\r\n        );\r\n        this.setState({ maxCartasElegibles: -1, minCartasElegidas: 2, accion: accionAtacar });\r\n        this.props.cambiarUIAtaque(this.state.cartasElegidas);\r\n    }\r\n\r\n    elegirCarta(indexCarta) {\r\n        if (this.state.maxCartasElegibles !== 0) {\r\n            let cartasElegidas = this.state.cartasElegidas.slice();\r\n            if (cartasElegidas.includes(indexCarta)) {\r\n                cartasElegidas.splice(cartasElegidas.findIndex((e) => e === indexCarta), 1);\r\n            }\r\n            else {\r\n                if (this.state.maxCartasElegibles > 0 && this.state.maxCartasElegibles <= cartasElegidas.length) {\r\n                    const cant = cartasElegidas.length - this.state.maxCartasElegibles + 1;\r\n                    for (let i = 0; i < cant; i++)cartasElegidas.shift();\r\n                }\r\n                cartasElegidas.push(indexCarta);\r\n            }\r\n            this.setState({ cartasElegidas: cartasElegidas });\r\n            if (this.state.accion === accionAtacar) {\r\n                this.props.cambiarUIAtaque(cartasElegidas);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const jugador = this.props.jugador;\r\n        const cantEnMano = jugador.mano.length;\r\n        const cartas = jugador.dataCartas.map((elem, index) => {\r\n            if (jugador.mazo.includes(index)) {\r\n                return (<div key={index} className=\"jugador-carta en-mazo\"><Carta className=\"volteada\">¿?</Carta></div>);\r\n            }\r\n            else if (this.props.jugador.esquivar.includes(index)) {\r\n                return (<div key={index} className=\"jugador-carta en-esquiva\"><Carta className=\"\">{elem}</Carta></div>);\r\n            }\r\n            else if (this.props.jugador.atacar.includes(index)) {\r\n                const ataqueActivo = this.props.fase === \"sumario\" && jugador.atacar[0] === index ? \" sobreponer\" : \"\";\r\n                const volteada = this.props.fase === \"sumario\" ? \"\" : \" volteada\";\r\n                return (<div key={index} className={\"jugador-carta en-ataque\" + ataqueActivo}><Carta className={volteada}>{elem}</Carta></div>);\r\n            }\r\n            else if (jugador.peligro.includes(index)) {\r\n                const peligroActivo = jugador.peligro[0] === index ? \" sobreponer\" : \"\";\r\n                return (<div key={index} className={\"jugador-carta en-peligro\" + peligroActivo}><Carta className=\"\">{elem}</Carta></div>);\r\n            }\r\n            else if (jugador.golpes.includes(index)) {\r\n                const golpeActivo = jugador.golpes[0] === index ? \" sobreponer\" : \"\";\r\n                return (<div key={index} className={\"jugador-carta en-golpes\" + golpeActivo}><Carta className=\"\">{elem}</Carta></div>);\r\n            }\r\n            else if (jugador.mano.includes(index)) {\r\n                const pos = jugador.mano.indexOf(index);\r\n                const elegida = this.state.cartasElegidas.includes(index) ? \" elegida\" : \"\";\r\n                const elegible = this.state.maxCartasElegibles === 0 ? \"\" : \" elegible\";\r\n                return (<div key={index} className={\"jugador-carta en-mano\" + elegida + elegible}\r\n                    style={{ \"--cant-cols\": cantEnMano, \"--col\": pos }} onClick={() => this.elegirCarta(index)}><Carta>{elem}</Carta></div>);\r\n            }\r\n            return (<div key={index}></div>);\r\n        });\r\n\r\n        const esquivar = this.props.moves.esquivar;\r\n        const atacar = this.props.moves.atacar;\r\n        const peligroActual = jugador.dataCartas[jugador.peligro[0]] || '0';\r\n\r\n        const accionesBasicasInactivas = this.props.fase !== \"primerAccion\" && this.props.fase !== \"segundaAccion\";\r\n\r\n        const accionesTomadas = jugador.accionesTomadas;\r\n        const esquivaOculto = this.state.accion === accionEsquivar ? \"\" : \" oculto\";\r\n        const ataqueOculto = this.state.accion === accionAtacar ? \"\" : \" oculto\";\r\n        const cartasElegidas = this.state.cartasElegidas.length >= this.state.minCartasElegidas ? \"\" : \" inactivo\";\r\n\r\n        return (\r\n            <div className=\"jugador\">\r\n                <div className=\"grilla-manual\">\r\n                    <div key={\"esquiva-base\"} className=\"jugador-carta en-esquiva\"><Carta className=\"\">-99</Carta></div>\r\n                    <div key={\"peligro-base\"} className=\"jugador-carta en-peligro\"><Carta className=\"\">0</Carta></div>\r\n                    {cartas}\r\n                </div>\r\n                <div className=\"grilla\">\r\n                    <VidaJugador inactivo={this.props.fase !== \"robar\"} robar3={this.props.moves.robarCartasInicial} jugador={this.props.jugador} />\r\n\r\n                    <Accion usable={!accionesTomadas.includes(accionEsquivar)} accion={() => this.iniciarEsquivar()}\r\n                        inactivo={accionesBasicasInactivas || jugador.mano.length === 0} jugador={this.props.jugador} stringAccion=\"Esquivar\">\r\n                        <div className={\"boton \" + esquivaOculto + cartasElegidas}\r\n                            onClick={() => esquivar(this.state.cartasElegidas[0], jugador.id)}>(Jugar)</div>\r\n                    </Accion>\r\n\r\n                    <Accion usable={!accionesTomadas.includes(\"buscarReparo\")} accion={() => this.props.moves.buscarReparo(jugador.id)}\r\n                        inactivo={accionesBasicasInactivas || jugador.peligro.length === 0} jugador={this.props.jugador} stringAccion=\"Recuperar\">\r\n                        <div className=\"peligro\">{\"PELIGRO: \" + peligroActual}</div>\r\n                    </Accion>\r\n\r\n                    <Accion usable={!accionesTomadas.includes(\"robarCarta\")} accion={() => this.props.moves.robarCarta(jugador.id)}\r\n                        inactivo={accionesBasicasInactivas || jugador.mazo.length === 0} jugador={jugador} stringAccion=\"Robar 1\"></Accion>\r\n\r\n                    <Accion usable={!accionesTomadas.includes(accionAtacar)} accion={() => this.iniciarAtaque()}\r\n                        inactivo={accionesBasicasInactivas || jugador.mano.length === 0} jugador={jugador} stringAccion=\"Atacar\">\r\n                        {/* <div className={\"boton \" + ataqueOculto + cartasElegidas}\r\n                            onClick={() => atacar(this.state.cartasElegidas, -1, jugador.id)}>(Jugar)</div> */}\r\n                    </Accion>\r\n\r\n                    <Accion usable={!accionesTomadas.includes(\"descansar\")} accion={() => this.props.moves.descansar(jugador.id)}\r\n                        inactivo={accionesBasicasInactivas || jugador.golpes.length === 0} jugador={jugador} stringAccion=\"Descansar\"></Accion>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Mensaje extends React.Component {\r\n    render() {\r\n        const classOculto = this.props.children ? \"\" : \"oculto\";\r\n        return (\r\n            <div className={\"mensaje \" + classOculto}>{this.props.children}</div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tablero extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { mensaje: null, ataque: null };\r\n    }\r\n\r\n    cambiarMensaje(contMensaje) {\r\n        this.setState({ mensaje: contMensaje });\r\n    }\r\n    cambiarAtaque(cartas) {\r\n        this.setState({ ataque: cartas });\r\n    }\r\n    atacarEnemigo(enemigo) {\r\n        this.props.moves.atacar(this.state.ataque, enemigo, this.props.ctx.currentPlayer);\r\n    }\r\n\r\n    render() {\r\n        const jug = this.props.G.players[this.props.ctx.currentPlayer];\r\n        const indexAtacado = (jug.atacar.length === 0 ? -1 : jug.objetivo);\r\n\r\n        let sumario = null;\r\n        if (this.props.ctx.gameover || this.props.ctx.phase === \"sumario\") {\r\n            let defensa = \"No esquivaste este turno, y por eso recibiste un daño...\";\r\n            if(jug.esquivar.length > 0) {\r\n                const peligroTotal = this.props.G.enemigos.reduce((total,enemigo)=>(enemigo.cartaPorJugar?enemigo.cartaPorJugar[0]:0)+total,jug.dataCartas[jug.peligro[0]]||0);\r\n                const evitado = jug.dataCartas[jug.esquivar[0]]>=peligroTotal;\r\n                defensa = `El ataque combinado de los enemigos y el nivel de peligro son de un total de ${peligroTotal}.\r\n                Tu esquiva de ${jug.dataCartas[jug.esquivar[0]]} ${evitado?\"\":\"no \"}fue suficiente para evitar el daño!`\r\n            }\r\n            let ataque = \"No atacaste a nadie este turno...\";\r\n            if (jug.atacar.length > 0) {\r\n                const enemigo = this.props.G.enemigos[jug.objetivo];\r\n                const defEnemigo = enemigo.clase.defensaBase + enemigo.cartaPorJugar[1];\r\n                const ataqueJugador = jug.dataCartas[jug.atacar[0]];\r\n                ataque = `Tu ataque fue con ${jug.atacar.length} cartas (${jug.atacar.length - 1} daño)\r\n                de las cuales salió el ${jug.dataCartas[jug.atacar[0]]}. El enemigo que atacaste fue ${enemigo.nombre}\r\n                que tiene una defensa base de ${enemigo.clase.defensaBase} y un modificador de\r\n                ${(enemigo.cartaPorJugar[1] > 0 ? \"+\" : \"\") + enemigo.cartaPorJugar[1]} este turno. Tu ataque\r\n                de ${jug.dataCartas[jug.atacar[0]]} ${ataqueJugador >= defEnemigo ? \"\" : \"no \"}venció su defensa total de ${defEnemigo}\r\n                ${ataqueJugador >= defEnemigo?\" causando \"+(jug.atacar.length - 1)+\" de daño!\":\".\"}`\r\n            }\r\n\r\n            let final = \"\";\r\n            if (this.props.ctx.gameover) {\r\n                if (this.props.ctx.gameover.vidasJugadores<=0) final = \"Fuiste derrotado. \";\r\n                if (this.props.ctx.gameover.enemigosVivos<=0) final += \"Todos los enemigos fueron vencidos!\";\r\n            }\r\n            sumario = (<div>{defensa}<br />{ataque}<br />{final}\r\n                <div className={\"boton \"+this.props.ctx.gameover?\"oculto\":\"\"} onClick={this.props.events.endPhase}>Aceptar</div>\r\n            </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {GitHubFork}\r\n                <Enemigos enemigos={this.props.G.enemigos} atacar={(arg) => this.atacarEnemigo(arg)}\r\n                    uiAtaque={this.state.ataque} atacado={indexAtacado} />\r\n                <Mensaje>{sumario || this.state.mensaje}</Mensaje>\r\n                <Jugador fase={this.props.ctx.phase} moves={this.props.moves}\r\n                    jugador={this.props.G.players[this.props.ctx.currentPlayer]}\r\n                    cambiarMensaje={(arg) => this.cambiarMensaje(arg)} cambiarUIAtaque={(arg) => this.cambiarAtaque(arg)} />                    \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tablero;","import './App.css';\nimport { Client } from 'boardgame.io/react';\nimport Juego from './juego';\nimport Tablero from './tablero';\n\nconst App = Client({ game: Juego, board: Tablero, numPlayers: 1, debug: false });\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}